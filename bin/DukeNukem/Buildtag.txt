Building Duke-Tag!

Following the guidelines, tips, and secrets below can help you 
develop working Duke-Tag! maps with all the tricks and dynamics 
you'd expect.  In this file you'll find a discussion of possible 
rules for Duke-Tag! This includes planning with concept 
suggestions, and implementation tricks. This file also explains 
how to use your own graphics and sounds and compile them into a 
neat package for trading amongst your Duke-Tag! adversaries and 
partners.


I.  Planning your Duke-Tag!

	Remember, the Duke-Tag! concept is simply a way of using 
the Duke Nukem 3d game environment, rules, and the included
construction tools to create different goals for multiplayer games 
of Duke Nukem 3d.

	As the creator of your own Duke-Tag! game, it is up to you 
to decide what those goals are.  Below is a list of concepts and 
possible implementations for different game goals.

A.  Classic Duke-Tag!		You may replicate the same 
principles found in the included Duke-Tag! map (e4l10) for your 
own Duke-Tag! games.
B.  Capture the Flag:		It might be fun to allow players 
to score simply by hitting a well secured switch, after which they're teleported back to their own area.  Teams will do their best to defend their switch, while sending one of their own into the opposing fort to score for their team.
C.  DukeRace!			Picture a race between Dukematchers. 
The finish line scores a point and moves players back to the start.  
Along the way are many hazards and traps players can use against 
each other to keep opposing players from scoring.  You must survive 
the race to score or it's back to the start!
D.  Run the Gauntlet:		Take the race a step further!  
Try a gladiator field full of dangerous obstacles - even 
monsters - that players must avoid to reach the scoring zones.  
Such games can be designed for any number of players.
E.  One on One Classic:		Scoring areas are near each 
other, and players have a time limit to reach the goal.  Make 
sure a specific object is also required to reach the goal.  Try 
requiring players to use a shrinker in a mirror to make themselves 
small enough to get through a crack which hides a scoring zone.  
Or, make the goal only reachable with a jetpack that is given at 
the beginning of the run.

II.	Building your Duke-Tag!	

There are some important rules you should remember when 
designing a Duke-Tag! map.

A.  Be Solid:		It should be impossible to "break" the 
map.  Since switches, activators, touchplates, and the like all 
can allow many activations, the designer must take into 
consideration the possibility that players may not behave 
exactly as you'd wish.  What would happen if the player jumps 
on a touchplate?  What if two players cross a touchplate at the 
same time?  What if a switch is triggered so rapidly it 
malfunctions a door?  The key to success here is play testing.  
Before releasing your Duke-Tag! map, make sure you test it until 
you're blue in the face!
B.  Be Fair:		Neither team should be given advantages 
or disadvantages as far as distance to goals or weapons are 
concerned. Always make sure that the map is evenly balanced for 
each team or player that may be in the game.  If your Duke-Tag! 
map will allow for more than two teams, consider what might 
happen if only two teams decided to play.  Block off areas that 
aren't used in the game.
C.  Give Options:	No one enjoys only one approach to 
solve a problem.  Forts and zones in your map should have 
multiple ways to access them.  Try making the way into an area 
differ from the way out.  If players take the time to collect 
other items (such as a jetpack or protective boots) new options 
should become available to them.  Also, make valuable objects, 
weapons and items risky to go after.  Remember, in Duke-Tag! 
risky could just mean time consuming.  If an RPG is away from 
the action, I'll have to think twice before wasting the time 
to go after it!
D.  Speed:		Your Duke-Tag! map should play fast, 
and be fast.  Don't clutter the frame rate with unnecessary 
details, or catch players on jagged corners or rough edges.  
In Duke-Tag! players want speed.  That means that if the frames 
are too low, or the player is getting caught on decorations, 
it will be no fun.  Go for fun factor and game play!
E.  Clues/Awareness:	Players need to know what is going on 
when playing Duke-Tag! Clever use of signs and sounds can help 
you alert your players to the activities of their partners and 
their opponents. Take a look at the included Duke-Tag! map as 
an example. Notice how sound cues alert all players in the game 
when a run is started or a score is earned.  Also notice the 
signs that open and reveal the state of the map at various 
points in the game.  These features are important and will be 
appreciated.

III.  Finishing it off

	Players want easy.   Players want to quickly learn 
the rules and easily jump in.  So, assuming your Duke-Tag! 
goals aren't too complex, here's how to make things easiest 
for them:  The entire Duke-Tag! game you create should come 
in a nice neat package.

	You may want to add new sounds and graphics to your 
user map to meet with the theme that is in your Duke-Tag! 
battlefield.  You can add this new information in one nice 
neat package called a group file (.GRP).  You'll notice that 
all of the Duke Nukem 3d Atomic Edition map, graphic and
sound information is contained in a group file called 
Duke3d.grp.  You may also load external group files when you 
run your game.  Games loaded will external group files will 
use all of the information contained in them along with the 
original group file info.

	So, if you want to add your own sounds similar to 
those found in E4L10, you may simply rename your .voc file 
to the ones used in the game (grun.voc, brun.voc, gscore.voc, 
bscore.voc).  Then, in your map you'll call them using the 
same tags on your Music SFX Sprites as they are defined in 
Defs.con and User.con.  You can browse these files to find 
the voc names and the definition number (tag number) of 
every sound in the game.

	You may also use editart to add your own graphics 
to your Duke-Tag! map. See the editart instructions and 
information for help with that.  When you have everything 
you need to make your Duke-Tag! map work, you'll want to 
compile it into a nice neat package - the group file.

	You'll be using one of the included tools called 
KGROUP.  Note that you can use KEXTRACT to get information 
out of a group file, and you can use KGROUP to compile 
information into a group file.

	The syntax for KGROUP.EXE is:	
KGROUP.EXE [grouped file][filenames].

	Later, you'll want to record demos of you playing 
your Duke-Tag! map, write a text file explaining the rules, 
and possible write a short batch file that will run Duke3d 
and load your Duke-Tag! group file automatically.  Then, 
you may group all of these files together in a zip and 
upload them to the internet, on-line service, or trade 
them with your friends via floppy disk since your entire 
Duke-Tag! game is compiled into one nice, neat file.

-Randall S. Pitchford II         3dRealms Entertainment
